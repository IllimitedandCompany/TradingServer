"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return CopyFactory;
    }
});
const _httpClient = /*#__PURE__*/ _interop_require_default(require("./clients/httpClient"));
const _configurationclient = /*#__PURE__*/ _interop_require_default(require("./clients/copyFactory/configuration.client"));
const _historyclient = /*#__PURE__*/ _interop_require_default(require("./clients/copyFactory/history.client"));
const _tradingclient = /*#__PURE__*/ _interop_require_default(require("./clients/copyFactory/trading.client"));
const _domainclient = /*#__PURE__*/ _interop_require_default(require("./clients/domain.client"));
const _logger = /*#__PURE__*/ _interop_require_default(require("./logger"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
class CopyFactory {
    /**
   * Enables using Log4js logger with extended log levels for debugging instead of
   * console.* functions. Note that log4js configuration performed by the user.
   */ static enableLog4jsLogging() {
        _logger.default.useLog4js();
    }
    /**
   * Returns CopyFactory configuration API
   * @returns {ConfigurationClient} configuration API
   */ get configurationApi() {
        return this._configurationClient;
    }
    /**
   * Returns CopyFactory history API
   * @return {HistoryClient} history API
   */ get historyApi() {
        return this._historyClient;
    }
    /**
   * Returns CopyFactory trading API
   * @return {TradingClient} trading API
   */ get tradingApi() {
        return this._tradingClient;
    }
    /**
   * Constructs CopyFactory class instance
   * @param {String} token authorization token
   * @param {Object} opts connection options
   * @param {String} [opts.domain] domain to connect to
   * @param {String} [opts.extendedTimeout] timeout for extended http requests in seconds
   * @param {Number} [opts.requestTimeout] timeout for http requests in seconds
   */ constructor(token, opts = {}){
        this._domain = opts.domain || "agiliumtrade.agiliumtrade.ai";
        let requestTimeout = opts.requestTimeout || 10;
        let requestExtendedTimeout = opts.extendedTimeout || 70;
        const retryOpts = opts.retryOpts || {};
        this._httpClient = new _httpClient.default(requestTimeout, requestExtendedTimeout, retryOpts);
        this._domainClient = new _domainclient.default(this._httpClient, token, this._domain);
        this._configurationClient = new _configurationclient.default(this._domainClient);
        this._historyClient = new _historyclient.default(this._domainClient);
        this._tradingClient = new _tradingclient.default(this._domainClient);
    }
}
