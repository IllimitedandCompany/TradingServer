"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    default: function() {
        return _default;
    },
    HistoryStorage: function() {
        return _historyStorage.default;
    },
    SynchronizationListener: function() {
        return _synchronizationListener.default;
    },
    MemoryHistoryStorage: function() {
        return _memoryHistoryStorage.default;
    },
    CopyFactory: function() {
        return _metaapicloudcopyfactorysdk.default;
    },
    StopoutListener: function() {
        return _metaapicloudcopyfactorysdk.StopoutListener;
    },
    UserLogListener: function() {
        return _metaapicloudcopyfactorysdk.UserLogListener;
    },
    TransactionListener: function() {
        return _metaapicloudcopyfactorysdk.TransactionListener;
    },
    MetaStats: function() {
        return _metaapicloudmetastatssdk.default;
    },
    RiskManagement: function() {
        return _riskManagement.default;
    },
    TrackerEventListener: function() {
        return _riskManagement.TrackerEventListener;
    },
    PeriodStatisticsListener: function() {
        return _riskManagement.PeriodStatisticsListener;
    },
    EquityChartListener: function() {
        return _riskManagement.EquityChartListener;
    },
    EquityBalanceListener: function() {
        return _riskManagement.EquityBalanceListener;
    }
});
const _metaApi = /*#__PURE__*/ _interop_require_default(require("./metaApi/metaApi"));
const _historyStorage = /*#__PURE__*/ _interop_require_default(require("./metaApi/historyStorage"));
const _memoryHistoryStorage = /*#__PURE__*/ _interop_require_default(require("./metaApi/memoryHistoryStorage"));
const _synchronizationListener = /*#__PURE__*/ _interop_require_default(require("./clients/metaApi/synchronizationListener"));
const _metaapicloudcopyfactorysdk = /*#__PURE__*/ _interop_require_wildcard(require("metaapi.cloud-copyfactory-sdk"));
const _metaapicloudmetastatssdk = /*#__PURE__*/ _interop_require_default(require("metaapi.cloud-metastats-sdk"));
const _riskManagement = /*#__PURE__*/ _interop_require_wildcard(require("./riskManagement"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
console.log("MetaApi SDK loaded");
const _default = _metaApi.default;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjxhbm9uPiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnNvbGUubG9nKCdNZXRhQXBpIFNESyBsb2FkZWQnKTtcblxuaW1wb3J0IE1ldGFBcGkgZnJvbSAnLi9tZXRhQXBpL21ldGFBcGknO1xuaW1wb3J0IEhpc3RvcnlTdG9yYWdlIGZyb20gJy4vbWV0YUFwaS9oaXN0b3J5U3RvcmFnZSc7XG5pbXBvcnQgTWVtb3J5SGlzdG9yeVN0b3JhZ2UgZnJvbSAnLi9tZXRhQXBpL21lbW9yeUhpc3RvcnlTdG9yYWdlJztcbmltcG9ydCBTeW5jaHJvbml6YXRpb25MaXN0ZW5lciBmcm9tICcuL2NsaWVudHMvbWV0YUFwaS9zeW5jaHJvbml6YXRpb25MaXN0ZW5lcic7XG5pbXBvcnQgQ29weUZhY3RvcnksIHsgXG4gIFN0b3BvdXRMaXN0ZW5lciwgXG4gIFVzZXJMb2dMaXN0ZW5lciwgXG4gIFRyYW5zYWN0aW9uTGlzdGVuZXJcbn0gZnJvbSAnbWV0YWFwaS5jbG91ZC1jb3B5ZmFjdG9yeS1zZGsnO1xuXG5pbXBvcnQgTWV0YVN0YXRzIGZyb20gJ21ldGFhcGkuY2xvdWQtbWV0YXN0YXRzLXNkayc7XG5cbmltcG9ydCBSaXNrTWFuYWdlbWVudCwge1xuICBUcmFja2VyRXZlbnRMaXN0ZW5lcixcbiAgUGVyaW9kU3RhdGlzdGljc0xpc3RlbmVyLFxuICBFcXVpdHlDaGFydExpc3RlbmVyLFxuICBFcXVpdHlCYWxhbmNlTGlzdGVuZXJcbn0gZnJvbSAnLi9yaXNrTWFuYWdlbWVudCc7XG5cbmV4cG9ydCBkZWZhdWx0IE1ldGFBcGk7XG5cbmV4cG9ydCB7XG4gIEhpc3RvcnlTdG9yYWdlLFxuICBTeW5jaHJvbml6YXRpb25MaXN0ZW5lcixcbiAgTWVtb3J5SGlzdG9yeVN0b3JhZ2UsXG4gIENvcHlGYWN0b3J5LFxuICBTdG9wb3V0TGlzdGVuZXIsXG4gIFVzZXJMb2dMaXN0ZW5lcixcbiAgVHJhbnNhY3Rpb25MaXN0ZW5lcixcbiAgTWV0YVN0YXRzLFxuICBSaXNrTWFuYWdlbWVudCxcbiAgVHJhY2tlckV2ZW50TGlzdGVuZXIsXG4gIFBlcmlvZFN0YXRpc3RpY3NMaXN0ZW5lcixcbiAgRXF1aXR5Q2hhcnRMaXN0ZW5lcixcbiAgRXF1aXR5QmFsYW5jZUxpc3RlbmVyXG59O1xuIl0sIm5hbWVzIjpbIkhpc3RvcnlTdG9yYWdlIiwiU3luY2hyb25pemF0aW9uTGlzdGVuZXIiLCJNZW1vcnlIaXN0b3J5U3RvcmFnZSIsIkNvcHlGYWN0b3J5IiwiU3RvcG91dExpc3RlbmVyIiwiVXNlckxvZ0xpc3RlbmVyIiwiVHJhbnNhY3Rpb25MaXN0ZW5lciIsIk1ldGFTdGF0cyIsIlJpc2tNYW5hZ2VtZW50IiwiVHJhY2tlckV2ZW50TGlzdGVuZXIiLCJQZXJpb2RTdGF0aXN0aWNzTGlzdGVuZXIiLCJFcXVpdHlDaGFydExpc3RlbmVyIiwiRXF1aXR5QmFsYW5jZUxpc3RlbmVyIiwiY29uc29sZSIsImxvZyIsIk1ldGFBcGkiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztJQXVCQSxPQUF1QjtlQUF2Qjs7SUFHRUEsY0FBYztlQUFkQSx1QkFBYzs7SUFDZEMsdUJBQXVCO2VBQXZCQSxnQ0FBdUI7O0lBQ3ZCQyxvQkFBb0I7ZUFBcEJBLDZCQUFvQjs7SUFDcEJDLFdBQVc7ZUFBWEEsbUNBQVc7O0lBQ1hDLGVBQWU7ZUFBZkEsMkNBQWU7O0lBQ2ZDLGVBQWU7ZUFBZkEsMkNBQWU7O0lBQ2ZDLG1CQUFtQjtlQUFuQkEsK0NBQW1COztJQUNuQkMsU0FBUztlQUFUQSxpQ0FBUzs7SUFDVEMsY0FBYztlQUFkQSx1QkFBYzs7SUFDZEMsb0JBQW9CO2VBQXBCQSxvQ0FBb0I7O0lBQ3BCQyx3QkFBd0I7ZUFBeEJBLHdDQUF3Qjs7SUFDeEJDLG1CQUFtQjtlQUFuQkEsbUNBQW1COztJQUNuQkMscUJBQXFCO2VBQXJCQSxxQ0FBcUI7OztnRUFsQ0g7dUVBQ087NkVBQ007Z0ZBQ0c7b0ZBSzdCO2lGQUVlO3dFQU9mOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFuQlBDLFFBQVFDLEdBQUcsQ0FBQztNQXFCWixXQUFlQyxnQkFBTyJ9